#include <iostream>
using namespace std;
class Car
{
private:
    string brand;
    string model;
    double price;
    bool availability;
    double revenue;

public:
    Car()
    {
        brand = "Unknown";
        model = "Generic";
        price = 0.0;
        availability = true;
        revenue = 0.0;
    }

    Car(string b, string m, double p, bool a)
    {
        brand = b;
        model = m;
        price = p;
        availability = a;
        revenue = 0.0;
    }

    Car(Car &c)
    {
        brand = c.brand;
        model = c.model;
        price = c.price;
        availability = c.availability;
        revenue = c.revenue;
        cout << "Copy constructor called. " << endl;
    }
    ~Car()
    {
        cout << "Destructor called:";
    }

    double applyDiscount(int days)
    {
        double tprice;
        if (days >= 5 && days < 10)
        {
            tprice = price * days * 0.95;
        }
        else if (days >= 10)
        {
            tprice = price * days * 0.9;
        }
        return tprice;
    }
    void rentalrequest(int days)
    {
        if (availability)
        {
            double cost = applyDiscount(days);
            this->revenue += cost;
            cout << "Rented! for " << days << " days.Total cost after discount: " << cost << endl;
            availability = false;
        }
        else
        {
            cout << "Not available";
        }
    }

    void displayDetails()
    {
        cout << "Brand: " << brand << "\nModel: " << model << "\nRental price: " << price << "\nAvailavle: " << (availability ? "Yes" : "No") << "\nTotal revenue: " << revenue << endl;
    }
};
int main()
{

    Car c1("Honda", "Civic", 50.0, true);

    cout << "\nInitial Car Details:\n";
    c1.displayDetails();

    c1.rentalrequest(7);
    c1.displayDetails();

    c1.rentalrequest(5);

    return 0;
}
