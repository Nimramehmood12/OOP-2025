#include <iostream>
using namespace std;
class Car
{
private:
    int carID;
    string brand;
    string model;
    double price;
    bool availability;
    double revenue;

public:
    Car(int id, string b, string m, double p, bool a)
        : carID(id), brand(b), model(m), price(p), availability(a), revenue(0.0) {}

    Car(const Car &c)
        : carID(c.carID), brand(c.brand), model(c.model), price(c.price), availability(c.availability), revenue(c.revenue)
    {
        cout << "Copy constructor called. " << endl;
    }
    ~Car()
    {
        cout << "Destructor called:";
    }

    double applyDiscount(int days)
    {
        double tprice;
        if (days >= 5 && days < 10)
        {
            tprice = price * days * 0.95;
        }
        else if (days >= 10)
        {
            tprice = price * days * 0.9;
        }
        return tprice;
    }
    void rentalrequest(int days)
    {
        if (availability)
        {
            double cost = applyDiscount(days);
            this->revenue += cost;
            availability = false;

            cout << "Car ID " << carID << " rented for " << days << " days. Total cost after discount" << cost << endl;
        }
        else
        {
            cout << "Not available";
        }
    }

    void displayDetails()
    {
        cout << "Brand: " << brand << "\nModel: " << model << "\nRental price: " << price << "\nAvailavle: " << (availability ? "Yes" : "No") << "\nTotal revenue: " << revenue << endl;
    }
};
int main()
{

    Car c1(102, "Honda", "Civic", 65.0, true);
    Car c2(101, "Toyota", "Corolla", 50.0, true);

    cout << "\nInitial Car Details:\n";
    c1.displayDetails();
    c2.displayDetails();

    c1.rentalrequest(7);
    c1.displayDetails();

    c1.rentalrequest(5);

    c2.rentalrequest(17);
    c2.displayDetails();

    return 0;
}
