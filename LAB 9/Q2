#include<iostream>
using namespace std;

class MenuItem{
protected:
string dishName;
double price;

public:
MenuItem(string d,double p):dishName(d),price(p){}
virtual void showDetails()=0;
virtual void prepare()=0;

};
class Appetizer:public MenuItem{
    public:
    Appetizer(string d,double p):MenuItem(d,p){}
    void showDetails()override{
        cout<<"Appetizer: "<<dishName<<", Price:"<<price<<endl;
    
    }
    void prepare() override{
        cout<<"Preparing Appetizer: Mix and serve cold."<<endl;
    }
};

class MainCourse : public MenuItem {
public:
    MainCourse(string d, double p) : MenuItem(d, p) {}
    void showDetails() override {
        cout << "Main Course: " << dishName << ", Price: " << price << endl;
    }
    void prepare() override {
        cout << "Preparing Main Course: Cook and plate hot."<<endl;
    }
};

int main(){
    MenuItem* m1=new Appetizer("Spring Rolls",250.9);
    MenuItem* m2 = new MainCourse("Cheese Chicken", 550.0);

    m1->showDetails();
    m1->prepare();

    m2->showDetails();
    m2->prepare();
    
    delete m1;
    delete m2;
    return 0;
}
